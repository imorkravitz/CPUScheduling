package test;import java.io.File;import java.io.FileNotFoundException;import java.util.*;import static java.lang.System.exit;public class main {    public static void main(String args[]) throws FileNotFoundException {        System.out.println("\n Or Kravitz 308248293   Nadav Voikovitch 308526508\n\n");        String fileNum = "";        String buffer = null;        try (Scanner userScanner = new Scanner(System.in)) {            System.out.println("Type the number of input you want (1-5):");            buffer = userScanner.nextLine();        }        if (buffer.charAt(0) < 1 + '0' || buffer.charAt(0) > 5 + '0') {            System.out.println("Too many tries to enter input number.\n");            exit(1); }        fileNum = String.valueOf(buffer.charAt(0));        String input = "input" + fileNum + ".txt";        //------------------------------------------------------------------//        File file = new File(input);        try (Scanner scanner = new Scanner(file)) {            fileNum = scanner.nextLine();            int num = Integer.parseInt(fileNum);            String[] s;            List<Proccess> list = new ArrayList<Proccess>();            for (int i = 0; i < num; i++) {                fileNum = scanner.nextLine();                s = fileNum.split(",");                list.add(new Proccess(Integer.parseInt(s[0]), Integer.parseInt(s[1])));            }            List<Proccess> slist = new ArrayList<>();            for (Proccess p : list) {                slist.add(new Proccess(p.arriveTime, p.progress));            }            Collections.sort(slist, new SortById());        } catch (NumberFormatException e) {            e.printStackTrace();        }    // ----------------------------------------Algorithms----------------------------------------//        // --------------------------------------------------------------------------------//        // --------------------------------------------------------------------------------//        // --------------------------------------------------------------------------------//        // --------------------------------------------------------------------------------//        // --------------------------------------------------------------------------------//}    static class Proccess {        int progress;        int arriveTime;        int endTime;        public Proccess(int arriveTime, int progress) {            this.arriveTime = arriveTime;            this.progress = progress;            this.endTime = 0;        }    }    static class SortById implements Comparator<Proccess> {        // Used for sorting in ascending order of ID        public int compare(Proccess a, Proccess b) {            return a.arriveTime - b.arriveTime;        }    }}